name: tests_python

on: [push]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install supporting packages
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          pip install tox poetry

      - name: Show versions
        run: |
          uname -a
          python3 --version
          echo "tox: $(tox --version)"
          poetry --version
          
      - name: Run lint
        run: tox -e lint
  
  tests:
    needs: lint
    strategy:
      matrix:
        os: [Ubuntu]
        python-version: ["3.8", "3.9", "3.10"]
        include:
          - os: Ubuntu
            image: ubuntu-latest
    runs-on: ${{ matrix.image }}
    steps:
      - uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install supporting packages
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          pip install tox poetry

      - name: Show versions
        run: |
          uname -a
          python3 --version
          echo "tox: $(tox --version)"
          poetry --version
          
      - name: Run tests
        # Run tox using py: The current Python version tox is using
        run: tox -e tests

  publish:
    needs: tests
    name: Build and publish Python distribution to PYPI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install supporting packages
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          pip install poetry

      - name: Show versions
        run: |
          uname -a
          python3 --version
          poetry --version

      - name: Build wheel and source tarball
        run: |
          poetry build

      - name: Publish distribution to PIPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
